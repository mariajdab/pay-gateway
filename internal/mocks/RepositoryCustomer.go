// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	entity "github.com/mariajdab/pay-gateway/internal/entity"
	mock "github.com/stretchr/testify/mock"
)

// RepositoryCustomer is an autogenerated mock type for the RepositoryCustomer type
type RepositoryCustomer struct {
	mock.Mock
}

// AddCustomer provides a mock function with given fields: customer
func (_m *RepositoryCustomer) AddCustomer(customer entity.Customer) error {
	ret := _m.Called(customer)

	if len(ret) == 0 {
		panic("no return value specified for AddCustomer")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(entity.Customer) error); ok {
		r0 = rf(customer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRepositoryCustomer creates a new instance of RepositoryCustomer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRepositoryCustomer(t interface {
	mock.TestingT
	Cleanup(func())
}) *RepositoryCustomer {
	mock := &RepositoryCustomer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
